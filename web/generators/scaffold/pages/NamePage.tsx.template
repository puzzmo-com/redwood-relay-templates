import { graphql, useLazyLoadQuery } from "react-relay"

import { Link, routes, AvailableRoutes } from "@redwoodjs/router"

import { ${singularPascalName}PageQuery } from "src/__generated__/${singularPascalName}PageQuery.graphql"
import { PresentMeta, PresentModel } from "src/components/Admin/UI"
import { DeleteNodeButton } from "src/components/Admin/ui/DeleteNodeButton"

export const Getter = graphql`
  query ${pascalName}PageQuery($id: ID!) {
    ${singularCamelName}(id: $id) {
      id
      slug

      createdAt
      <% editableColumns.forEach(column => { %>
      ${column.name}<% }) %>

    }
  }
`

type PageParams = Parameters<AvailableRoutes["admin${singularPascalName}"]>[0]
const ${singularPascalName} = (props: PageParams) => {
  const { ${singularCamelName} } = useLazyLoadQuery<${singularPascalName}PageQuery>(Getter, { id: props.id })

  const meta: PresentMeta[] = [
    // { type: "string", display: "Email", value: ${singularCamelName}.email },
    // { type: "string", display: "handle", value: ${singularCamelName}.${singularCamelName}name },
    // { type: "time", display: "Created At", value: ${singularCamelName}.createdAt },

  ]

  const title = "${singularPascalName}: " + ${singularCamelName}.slug
  const subtitle = ${singularCamelName}.id

  return (
    <>
      <PresentModel meta={meta} title={title} subtitle={subtitle}></PresentModel>

      <nav className="rw-button-group">
        <Link to={routes.adminEdit${singularPascalName}({ id: ${singularCamelName}.id })} className="btn btn-puzmo">
          Edit
        </Link>
        <DeleteNodeButton id={${singularCamelName}.id} />
      </nav>
    </>
  )
}

export default ${singularPascalName}
